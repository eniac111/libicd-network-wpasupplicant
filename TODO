wpa-supplicant conversion task list:

[ ] Check config vars against https://www.freebsd.org/cgi/man.cgi?wpa_supplicant.conf(5)
[ ] Properly set WPA (WPA1) or RSN (WPA2) or both, depending on wpaicd info and gconf value about WPA2 only::

     proto   List of acceptable protocols; one or more of: WPA (IEEE
         802.11i/D3.0) and RSN (IEEE 802.11i).  WPA2 is another name for
         RSN.  If not set this defaults to "WPA RSN".

[X] Do not crash on auto scan
[X] Re-add gconf support
[X] Make plugin work with gconf values
[X] Support loading values from gconf
[X] Be able to make wpasupplicant network configs from gconf
[X] `network_name` should be connection name, if known in gconf
[X] Implement scanning
[X] Implement network info getting
[X] Implement network adding / connecting
[X] Implement wlan_statistics
[X] Rename package to libicd-network-wpasupplicant (from libicd-network-wlan) [in separate branch, needs fixes]
[X] Implement other icd2 interfaces
[X] Add states
[X] Figure out how wpa_supplicant should be started (by networking init script for now)
[X] For network matching, match way more than just ssid.
[ ] Look at auth failures and timeouts
[X] Make (quick)connection dialog work by passing the right attrs
[X] Add network attrs and local attrs (local attrs can be passed to icd2, which are all wpa_supplicant attrs possible, but then stored in the local-attr part... I guess)
[ ] Restore -Werror
[/] Run valgrind over code
[/] Test more complicated network setups (eduroam, ad-hoc...)
[ ] Active or passive scan?
[ ] Properly (re)add copyright where code was used/copied from previous module
[ ] Rework g variant parsing using more complex g_variant_get calls
[ ] Look at wpa_priv(8)
[ ] Refactor code: rename functions, macros, etc, make it a lot more clean
[X] Test switching from a live wifi connection to another one
[/] Implement network down notifications (lost connection, etc) - requires to keep network_id and such in struct
[ ] Check if a WEP network that is "WEP Open System" actually has Privacy=True, and if it does, make sure that we consider it as open network, and not as network that needs a password, I think?
[ ] Replace all fprintf with proper log statements



Mappings:

- gconf network desc (NOTE: gconf doesn't contain just network properties, but
  also some policies, but place them elsewhere)
- wpa_supplicant bss desc (dbus in)
- wpa_supplicant add_network desc (dbus out)
- to 'wlancond' nwattrs for various dialogs

Mappings always way, apart from name:
  - gconf -> dbus out (wpa_supplicant add_network)
  - dbus in -> dbus out

Matching:

- 'gconf known' networks to 'dbus in' networks (I would say: gconf -> IR, dbus
  in -> IR, match IR networks...?)
